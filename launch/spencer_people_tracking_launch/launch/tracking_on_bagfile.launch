 <launch>
    <arg name="bagfile_folder" default="$(env HOME)/.ros/spencer_tracking_rgbd_2dlaser_example_bagfiles/"/>

    <arg name="front_laser" default="false"/>
    <arg name="front_rgbd" default="true"/>
    
    <arg name="rear_rgbd" default="false"/>
    <arg name="rear_laser" default="false"/>
    
    <!-- Which RGB-D detector to use? Default setting (only upper-body) gives best results. Note that PCL+upper-body detector cannot be combined -->
    <arg name="use_pcl_detector" default="false"/>
    <arg name="use_hog_detector" default="false"/>
    <arg name="use_upper_body_detector" default="true" unless="$(arg use_pcl_detector)"/>
    <arg name="use_upper_body_detector" default="false"    if="$(arg use_pcl_detector)"/>

    <arg name="static_map" default="true"/>
    
    <arg name="loop" default="true"/>
    <arg name="rate" default="0.2"/>

    <arg name="visualization" default="true"/>
    <arg name="rviz_config_file" default="$(find spencer_people_tracking_launch)/rviz/tracking-rgbd-laser.rviz"  unless="$(arg ds)"/>
    <arg name="rviz_config_file" default="$(find spencer_people_tracking_launch)/rviz/tracking-rgbd-robotarm-sim.rviz" if="$(arg ds)"/>

    <arg name="height_above_ground" default="1.6"/>
    <arg name="ds" default="false"/>
	
    <!-- added-->
    <group if="$(arg ds)">
		<rosparam param="/spencer/perception_internal/people_detection/ground_plane/distance"
							subst_value="true">$(arg height_above_ground)</rosparam>
		<remap from="/spencer/sensors/pose" to="/odom"/>
		<node name="relay_odom" type="relay" pkg="topic_tools" 
					args="/odom /spencer/sensors/odom"/>

		<!--Change the names of topis from the dataset to the right topic names for the method-->
		<node name="republish_rgb" type="republish" pkg="image_transport" 
					args="compressed in:=/spencer/sensors/camera/rgb/image_color
					raw out:=/spencer/sensors/rgbd_front_top/rgb/image_rect_color"/>
		<node name="relay_depth" type="relay" pkg="topic_tools"
					args="/spencer/sensors/camera/depth/image
					/spencer/sensors/rgbd_front_top/depth/image_rect"/>
		<node name="relay_rgb_camera_info" type="relay" pkg="topic_tools"
					args="/spencer/sensors/camera/rgb/camera_info 
					/spencer/sensors/rgbd_front_top/rgb/camera_info"/>
		<node name="relay_depth_camera_info" type="relay" pkg="topic_tools" 
					args="/spencer/sensors/camera/rgb/camera_info 
					spencer/sensors/rgbd_front_top/depth/camera_info"/>

		<!--TODO: fix topic relay for visualization.>
		<node name="relay_depth_rect" type="relay" pkg="topic_tools" args="/spencer/sensors/rgbd_front_top/depth/image_rect /spencer/sensors/rgbd_front_top/depth_registered/image_rect"/>
		<node name="relay_depth_camera_info_2" type="relay" pkg="topic_tools" args="/spencer/sensors/rgbd_front_top/depth/camera_info /spencer/sensors/rgbd_front_top/depth_registered/camera_info"/>
		<node name="relay_depth_raw" type="relay" pkg="topic_tools" args="/spencer/sensors/rgbd_front_top/depth/image_rect /spencer/sensors/rgbd_front_top/depth/image_raw"/-->

		<!-- Set up dummy transforms into an imaginary robot and odom frame -->
		<node name="tf_openni"         pkg="tf" type="static_transform_publisher" 
					args="0 0 0 -1.570796 0 -1.570796 rgbd_front_top_link openni_rgb_optical_frame 10"/>
		<node name="tf_base_footprint" pkg="tf" type="static_transform_publisher" 
					args="0 0 $(arg height_above_ground) 0 0 0 base_footprint rgbd_front_top_link 10"/>	
		<node name="tf_map"         pkg="tf" type="static_transform_publisher" 
					args="0 0 0 0 0 0 1 base_footprint map 10"/>
		<node name="tf_odom"           pkg="tf" type="static_transform_publisher" 
					args="0 0 0 0 0 0 odom base_footprint 10"/>
		
		<!--add robot simulation-->

		<node name="tf_robot" pkg="tf" type="static_transform_publisher" args="2 -2 0 1.570796 0 0 map katana_base_link 10"/>

		<param name="robot_description" command="$(find xacro)/xacro --inorder '$(find spencer_people_tracking_launch)/launch/robot_desc.urdf.xacro'"/>
		<param name="use_gui" value="true"/>

  		<node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher"/>

  		<node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher"/>
		
    </group>	

    <!-- Bagfile playback -->
    <include file="$(find spencer_bagfile_tools)/launch/playback_from_robot.launch">
        <!-- Load bagfiles from this folder, assuming they are prefixed correctly -->
        <arg name="folder" value="$(arg bagfile_folder)"/>
            <arg name="laser" value="$(arg front_laser)"/>
            <arg name="front_rgbd" value="$(arg front_rgbd)"/>
            <arg name="rear_rgbd" value="$(arg rear_rgbd)"/>
            <arg name="remap_tf" value="true"/>
			<!-- Data in dataset is not compressed.-->
			<arg name="uncompress_rgbd" value="false" if="$(arg ds)"/>
        <!-- We could also supply individual filenames instead. In that case, it is easiest if all topics were recorded into the same bagfile. -->
        <!-- <arg name="files" value="$(find bagfile_folder)/mybagfile.bag"/> -->

        <arg name="loop" value="$(arg loop)"/>
        <arg name="rate" value="$(arg rate)"/>
        <arg name="required" value="false"/>
        
        <arg name="visualization" value="$(arg visualization)"/>
        <arg name="rviz_config_file" value="$(arg rviz_config_file)"/>
    </include>

    <!-- Optionally load a map to suppress false positives -->
    <node name="map_server" pkg="map_server" type="map_server" args="$(arg bagfile_folder)/map.yaml" if="$(arg static_map)"/>


    <!-- Detectors -->
    <include file="$(find spencer_people_tracking_launch)/launch/detectors/front_rgbd_detectors.launch" if="$(arg front_rgbd)">
        <arg name="upper_body" value="$(arg use_upper_body_detector)"/>
        <arg name="pcl_detector" value="$(arg use_pcl_detector)"/>
        <arg name="hog" value="$(arg use_hog_detector)"/>
    </include>


    <!-- People tracking -->
    <include file="$(find spencer_people_tracking_launch)/launch/tracking/freiburg_people_tracking.launch">
        <arg name="rgbd" value="$(arg front_rgbd)"/>
        <arg name="laser_low_confidence_detections" value="$(arg front_laser)"/>
    </include>

    <!-- Only needed if no laser available -->
    <group unless="$(arg front_laser)">
        <!-- As there is not yet any high-recall/low-confidence detector for RGB-D, and we are not using laser, tracks may get deleted too quickly in case of missed detections.
         To deal with this, for the moment, we increase the maximum number of occluded frames to be  a bit more tolerant towards missed detections.
         This works fine in uncrowded environments which are not very dynamic. -->
        <rosparam param="/spencer/perception_internal/people_tracking/srl_nearest_neighbor_tracker/max_occlusions_before_deletion">50</rosparam>
        <rosparam param="/spencer/perception_internal/people_tracking/srl_nearest_neighbor_tracker/max_occlusions_before_deletion_of_mature_track">200</rosparam>
    </group>

    <!-- Group tracking -->
    <!--include file="$(find spencer_people_tracking_launch)/launch/tracking/group_tracking.launch"--> 

</launch>
